
 
 <!--   Core JS Files   -->
 <script src="/assets/js/core/popper.min.js"></script>
 <script src="/assets/js/core/bootstrap.min.js"></script>
 <script src="/assets/js/plugins/perfect-scrollbar.min.js"></script>
 <script src="/assets/js/plugins/smooth-scrollbar.min.js"></script>
 <script src="/assets/js/plugins/chartjs.min.js"></script>
 <script>
      
    const UPI = document.getElementById("UPI").value
    const COD = document.getElementById("COD").value
    const wallet = document.getElementById("wallet").value
    const sales = document.getElementById("sales").value
    const shipped = document.getElementById("shipped").value
    const cancelled = document.getElementById("cancelled").value
    const returned = document.getElementById("returned").value
    const delevired = document.getElementById("delevired").value
    console.log(shipped+"graph123");

   var ctx = document.getElementById("chart-bars").getContext("2d");
   new Chart(ctx, {
     type: "bar",
     data: {
       labels: ["UPI", "COD", "WALLET"],
       datasets: [{
         label: "payment",
         tension: 0.4,
         borderWidth: 0,
         borderRadius: 4,
         borderSkipped: false,
         backgroundColor: "rgba(255, 255, 255, .8)",
         data: [UPI,COD,wallet],
         maxBarThickness: 6
       }, ],
     },
     options: {
       responsive: true,
       maintainAspectRatio: false,
       plugins: {
         legend: {
           display: false,
         }
       },
       interaction: {
         intersect: false,
         mode: 'index',
       },
       scales: {
         y: {
           grid: {
             drawBorder: false,
             display: true,
             drawOnChartArea: true,
             drawTicks: false,
             borderDash: [5, 5],
             color: 'rgba(255, 255, 255, .2)'
           },
           ticks: {
             suggestedMin: 0,
             suggestedMax: 500,
             beginAtZero: true,
             padding: 10,
             font: {
               size: 14,
               weight: 300,
               family: "Roboto",
               style: 'normal',
               lineHeight: 2
             },
             color: "#fff"
           },
         },
         x: {
           grid: {
             drawBorder: false,
             display: true,
             drawOnChartArea: true,
             drawTicks: false,
             borderDash: [5, 5],
             color: 'rgba(255, 255, 255, .2)'
           },
           ticks: {
             display: true,
             color: '#f8f9fa',
             padding: 10,
             font: {
               size: 14,
               weight: 300,
               family: "Roboto",
               style: 'normal',
               lineHeight: 2
             },
           }
         },
       },
     },
   });


   var ctx2 = document.getElementById("chart-line").getContext("2d");

   new Chart(ctx2, {
     type: "line",
     data: {
       labels: ["sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
       datasets: [{
         label: "weekly report ",
         tension: 0,
         borderWidth: 0,
         pointRadius: 5,
         pointBackgroundColor: "rgba(255, 255, 255, .8)",
         pointBorderColor: "transparent",
         borderColor: "rgba(255, 255, 255, .8)",
         borderColor: "rgba(255, 255, 255, .8)",
         borderWidth: 4,
         backgroundColor: "transparent",
         fill: true,
         data: [sales],
         maxBarThickness: 6

       }],
     },
     options: {
       responsive: true,
       maintainAspectRatio: false,
       plugins: {
         legend: {
           display: false,
         }
       },
       interaction: {
         intersect: false,
         mode: 'index',
       },
       scales: {
         y: {
           grid: {
             drawBorder: false,
             display: true,
             drawOnChartArea: true,
             drawTicks: false,
             borderDash: [5, 5],
             color: 'rgba(255, 255, 255, .2)'
           },
           ticks: {
             display: true,
             color: '#f8f9fa',
             padding: 10,
             font: {
               size: 14,
               weight: 300,
               family: "Roboto",
               style: 'normal',
               lineHeight: 2
             },
           }
         },
         x: {
           grid: {
             drawBorder: false,
             display: false,
             drawOnChartArea: false,
             drawTicks: false,
             borderDash: [5, 5]
           },
           ticks: {
             display: true,
             color: '#f8f9fa',
             padding: 10,
             font: {
               size: 14,
               weight: 300,
               family: "Roboto",
               style: 'normal',
               lineHeight: 2
             },
           }
         },
       },
     },
   });

   var ctx3 = document.getElementById("chart-line-tasks").getContext("2d");

   new Chart(ctx3, {
     type: "line",
     data: {
       labels: ["delevired", "shipped", "cancelled", "returned"],
       datasets: [{
         label: "Books",
         tension: 0,
         borderWidth: 0,
         pointRadius: 5,
         pointBackgroundColor: "rgba(255, 255, 255, .8)",
         pointBorderColor: "transparent",
         borderColor: "rgba(255, 255, 255, .8)",
         borderWidth: 4,
         backgroundColor: "transparent",
         fill: true,
         data: [delevired,shipped, cancelled, returned],
         maxBarThickness: 6

       }],
     },
     options: {
       responsive: true,
       maintainAspectRatio: false,
       plugins: {
         legend: {
           display: false,
         }
       },
       interaction: {
         intersect: false,
         mode: 'index',
       },
       scales: {
         y: {
           grid: {
             drawBorder: false,
             display: true,
             drawOnChartArea: true,
             drawTicks: false,
             borderDash: [5, 5],
             color: 'rgba(255, 255, 255, .2)'
           },
           ticks: {
             display: true,
             padding: 10,
             color: '#f8f9fa',
             font: {
               size: 14,
               weight: 300,
               family: "Roboto",
               style: 'normal',
               lineHeight: 2
             },
           }
         },
         x: {
           grid: {
             drawBorder: false,
             display: false,
             drawOnChartArea: false,
             drawTicks: false,
             borderDash: [5, 5]
           },
           ticks: {
             display: true,
             color: '#f8f9fa',
             padding: 10,
             font: {
               size: 14,
               weight: 300,
               family: "Roboto",
               style: 'normal',
               lineHeight: 2
             },
           }
         },
       },
     },
   });
</script>
<script>
  var win = navigator.platform.indexOf('Win') > -1;
  if (win && document.querySelector('#sidenav-scrollbar')) {
    var options = {
      damping: '0.5'
    }
    Scrollbar.init(document.querySelector('#sidenav-scrollbar'), options);
  }
</script>
<!-- Github buttons -->
<script async defer src="https://buttons.github.io/buttons.js"></script>
<!-- Control Center for Material Dashboard: parallax effects, scripts for the example pages etc -->
<script src="./assets/js/material-dashboard.min.js?v=3.0.0"></script>
</body>

</html>